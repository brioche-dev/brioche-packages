import * as brioche from "/core";
import stage2 from "/toolchain/stage2";

export default brioche.memo((): brioche.Lazy<brioche.Directory> => {
  const sourceArchive = brioche
    .download({
      url: "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/readline-8.2.tar.gz",
      hash: brioche.sha256Hash("3feb7171f16a84ee82ca18a36d7b9be109a52c04f492a053331d7d1095007c35"),
    });
  const sourcePatch = brioche
    .download({
      url: "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/patches/readline-8.2-upstream_fix-1.patch",
      hash: brioche.sha256Hash("2d6478185dcce0d8fe6ac02e7872fba8b91429f41627ddfc2e322e5338e36a53"),
    });

  return brioche.process({
    command: brioche.processTemplate(stage2(), "/bin/bash"),
    args: [
      brioche.processTemplate("-c"),
      brioche.processTemplate(`
        set -euo pipefail

        tar -xf "$source" --strip-components=1 --no-same-owner --no-same-permissions

        sed -i '/MV.*old/d' Makefile.in
        sed -i '/{OLDSUFF}/c:' support/shlib-install

        patch -Np1 -i "$sourcePatch"

        ./configure \
          --prefix=/ \
          --with-curses
        make SHLIB_LIBS="-lncursesw"
        make install SHLIB_LIBS="-lncursesw" DESTDIR="$BRIOCHE_OUTPUT"
      `),
    ],
    env: {
      source: brioche.processTemplate(sourceArchive),
      PATH: brioche.processTemplate(stage2(), "/bin"),
      sourcePatch: brioche.processTemplate(sourcePatch),
    }
  }).cast("directory");
});
