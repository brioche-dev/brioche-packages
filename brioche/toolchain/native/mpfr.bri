import * as brioche from "/core";
import stage2 from "/toolchain/stage2";
import gmp from "./gmp.bri";

export default brioche.memo((): brioche.Lazy<brioche.Directory> => {
  const sourceArchive = brioche
    .download({
      url: "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/mpfr-4.2.0.tar.xz",
      hash: brioche.sha256Hash("06a378df13501248c1b2db5aa977a2c8126ae849a9d9b7be2546fb4a9c26d993"),
    });

  let mpfr = brioche.process({
    command: brioche.processTemplate(stage2(), "/bin/bash"),
    args: [
      brioche.processTemplate("-c"),
      brioche.processTemplate(`
        set -euo pipefail

        tar -xf "$source" --strip-components=1 --no-same-owner --no-same-permissions

        sed \
          -e 's/+01,234,567/+1,234,567 /' \
          -e 's/13.10Pd/13Pd/' \
          -i tests/tsprintf.c

        ./configure \
          --prefix=/ \
          --disable-static \
          --enable-thread-safe
        make
        make install DESTDIR="$BRIOCHE_OUTPUT"
      `),
    ],
    env: {
      source: brioche.processTemplate(sourceArchive),
      PATH: brioche.processTemplate(stage2(), "/bin"),
      CPPFLAGS: brioche.processTemplate("-I", gmp(), "/include"),
      LDFLAGS: brioche.processTemplate("-L", gmp(), "/lib"),
    },
  }).cast("directory");

  // TODO: Use JS functions to do this conversion
  let libtoolArchive = brioche.get(mpfr, "lib/libmpfr.la");
  libtoolArchive = brioche.process({
    command: brioche.processTemplate(stage2(), "/bin/bash"),
    args: [
      brioche.processTemplate("-c"),
      brioche.processTemplate(`
        set -euo pipefail

        sed 's|//lib/libgmp.la|-lgmp|' "$libtoolArchive" > "$BRIOCHE_OUTPUT"
      `),
    ],
    env: {
      PATH: brioche.processTemplate(stage2(), "/bin"),
      libtoolArchive: brioche.processTemplate(libtoolArchive),
    },
  }).cast("file");

  mpfr = brioche.insert(mpfr, "lib/libmpfr.la", libtoolArchive);

  return mpfr;
});
