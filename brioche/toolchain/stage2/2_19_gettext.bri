import * as brioche from "/core";
import { wrapWithScript, makeFile, useBriocheLd } from "../utils.bri";
import toolchain from "./2_18_toolchain.bri";

export default brioche.memo(async (): Promise<brioche.Lazy<brioche.Directory>> => {
  const sourceArchive = brioche
    .download({
      url: "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/gettext-0.22.tar.xz",
      hash: brioche.sha256Hash("0e60393a47061567b46875b249b7d2788b092d6457d656145bb0e7e6a3e26d93"),
    });

  return brioche.process({
    command: brioche.processTemplate("/usr/bin/env"),
    args: [
      brioche.processTemplate("sh"),
      brioche.processTemplate("-c"),
      brioche.processTemplate(`
        set -euo pipefail

        tar xf "$source" --strip-components=1
        ./configure --disable-shared
        make
        mkdir -p "$BRIOCHE_OUTPUT/usr/bin"
        cp gettext-tools/src/{msgfmt,msgmerge,xgettext} "$BRIOCHE_OUTPUT/usr/bin"
      `)
    ],
    env: {
      PATH: brioche.processTemplate(toolchain(), "/bin"),
      GCONV_PATH: brioche.processTemplate(toolchain(), "/usr/lib/gconv"),
      source: brioche.processTemplate(sourceArchive),
    },
  }).cast("directory");
});
