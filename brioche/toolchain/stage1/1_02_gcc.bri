import * as brioche from "/core";
import { bootstrapRun } from "/toolchain/stage0";
import binutils from "./1_01_binutils.bri";

export default brioche.memo(async (): Promise<brioche.Lazy<brioche.Directory>> => {
  const sourceArchive = brioche
    .download({
      url: "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/gcc-13.2.0.tar.xz",
      hash: brioche.sha256Hash("e275e76442a6067341a27f04c5c6b83d8613144004c0413528863dc6b5c743da"),
    });
  const mpfrArchive = brioche
    .download({
      url: "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/mpfr-4.2.0.tar.xz",
      hash: brioche.sha256Hash("06a378df13501248c1b2db5aa977a2c8126ae849a9d9b7be2546fb4a9c26d993"),
    });
  const gmpArchive = brioche
    .download({
      url: "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/gmp-6.3.0.tar.xz",
      hash: brioche.sha256Hash("a3c2b80201b89e68616f4ad30bc66aee4927c3ce50e33929ca819d5c43538898"),
    });
  const mpcArchive = brioche
    .download({
      url: "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/mpc-1.3.1.tar.gz",
      hash: brioche.sha256Hash("ab642492f5cf882b74aa0cb730cd410a81edcdbec895183ce930e706c1c759b8"),
    });

  const stage1 = binutils();

  return bootstrapRun({
    script: `
      set -euo pipefail

      export PATH="$stage1/usr/bin:/usr/lib/gcc/x86_64-linux-gnu/12\${PATH:+:$PATH}"

      mkdir -p source/build
      tar -xf "$source" -C source --strip-components=1 --no-same-owner --no-same-permissions
      cd source

      tar -xf "$mpfrArchive" --no-same-owner --no-same-permissions
      mv mpfr-4.2.0 mpfr
      tar -xf "$gmpArchive" --no-same-owner --no-same-permissions
      mv gmp-6.3.0 gmp
      tar -xf "$mpcArchive" --no-same-owner --no-same-permissions
      mv mpc-1.3.1 mpc

      case "$(uname -m)" in
        x86_64 )
          sed \\
            -e '/m64=/s/lib64/lib/' \\
            -i.orig \\
            gcc/config/i386/t-linux64
        ;;
      esac

      cd build
      ../configure \
        --prefix=/usr \
        --target="$TARGET" \
        --with-build-sysroot="$stage1" \
        --with-glibc-version=2.38 \
        --with-newlib \
        --without-headers \
        --enable-default-pie \
        --enable-default-ssp \
        --disable-nls \
        --disable-shared \
        --disable-multilib \
        --disable-threads \
        --disable-libatomic \
        --disable-libgomp \
        --disable-libquadmath \
        --disable-libssp \
        --disable-libvtv \
        --disable-libstdcxx \
        --enable-languages=c,c++
      make
      make install DESTDIR="$BRIOCHE_OUTPUT"

      cd ..
      cat gcc/limitx.h gcc/glimits.h gcc/limity.h > \
        "$(dirname "$("$TARGET-gcc" -print-libgcc-file-name)")"/include/limits.h
    `,
    env: {
      source: sourceArchive,
      mpfrArchive,
      gmpArchive,
      mpcArchive,
      BRIOCHE_OUTPUT: brioche.outputPath,
      TARGET: "x86_64-lfs-linux-gnu",
      stage1,
    }
  });
});
