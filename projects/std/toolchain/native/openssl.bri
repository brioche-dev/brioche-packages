import * as std from "/core";
import stage2 from "/toolchain/stage2";
import zlib from "./zlib.bri";

export default std.memo((): std.Lazy<std.Directory> => {
  const sourceArchive = std.download({
    url: "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/openssl-3.1.2.tar.gz",
    hash: std.sha256Hash(
      "a0ce69b8b97ea6a35b96875235aa453b966ba3cba8af2de23657d8b6767d6539",
    ),
  });

  // TODO: Fix dynamic linking with zlib (`zlib-dynamic` option instead of `zlib`)
  return std
    .process({
      command: std.tpl`${stage2()}/bin/bash`,
      args: [
        "-c",
        std.indoc`
          set -euo pipefail

          tar -xf "$source" --strip-components=1 --no-same-owner --no-same-permissions

          ./config \
            --prefix=/ \
            --openssldir=/etc/ssl \
            --libdir=lib \
            -L"$zlib/lib" \
            -I"$zlib/include" \
            shared \
            zlib

          make

          sed -i '/INSTALL_LIBS/s/libcrypto.a libssl.a//' Makefile
          make install DESTDIR="$BRIOCHE_OUTPUT" MANSUFFIX=ssl
        `,
      ],
      env: {
        source: sourceArchive,
        PATH: std.tpl`${stage2()}/bin`,
        zlib: zlib(),
      },
    })
    .cast("directory");
});
