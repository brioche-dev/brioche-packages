import { Recipe, createRecipe } from "./recipes";
import { source } from "./source.bri";

export interface BriocheGlobal {
  get(path: string): Recipe;
}

(globalThis as any).Brioche = {
  get(path: string): Recipe {
    const sourceFrame = source({ depth: 1 }).at(0);
    if (sourceFrame === undefined) {
      throw new Error(`Could not find source file to retrieve ${path}`);
    }

    const sourceFile = sourceFrame.fileName;

    return createRecipe(["file", "directory", "symlink"], {
      sourceDepth: 1,
      briocheSerialize: async () => {
        return await (globalThis as any).Deno.core.ops.op_brioche_get_static(
          sourceFile,
          {
            type: "get",
            path,
          },
        );
      },
    });
  },
} satisfies BriocheGlobal;
