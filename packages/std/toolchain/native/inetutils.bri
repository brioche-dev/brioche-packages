import * as std from "/core";
import stage2 from "/toolchain/stage2";

export default std.memo((): std.Recipe<std.Directory> => {
  const source = Brioche.download(
    "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/inetutils-2.4.tar.xz",
  )
    .unarchive("tar", "xz")
    .peel();

  return std
    .process({
      command: std.tpl`${stage2()}/bin/bash`,
      args: [
        "-euo",
        "pipefail",
        "-c",
        std.indoc`
          ./configure \
            --prefix=/ \
            --bindir=/bin \
            --localstatedir=/var \
            --disable-logger \
            --disable-whois \
            --disable-rcp \
            --disable-rexec \
            --disable-rlogin \
            --disable-rsh \
            --disable-servers
          make
          make install DESTDIR="$BRIOCHE_OUTPUT"

          mkdir -p "$BRIOCHE_OUTPUT/sbin"
          ln -s "../bin/ifconfig" "$BRIOCHE_OUTPUT/sbin/ifconfig"
        `,
      ],
      env: {
        PATH: std.tpl`${stage2()}/bin`,
      },
      workDir: source,
    })
    .toDirectory();
});
