import * as std from "/core";
import stage2 from "/toolchain/stage2";
import pkgconf from "./pkgconf.bri";
import ncurses from "./ncurses.bri";

export default std.memo((): std.Recipe<std.Directory> => {
  const sourceArchive = Brioche.download(
    "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/procps-ng-4.0.3.tar.xz",
  );

  return std
    .process({
      command: std.tpl`${stage2()}/bin/bash`,
      args: [
        "-c",
        std.indoc`
          set -euo pipefail

          tar -xf "$source" --strip-components=1 --no-same-owner --no-same-permissions

          ./configure \
            --prefix=/ \
            --disable-static \
            --disable-kill
          make
          make install DESTDIR="$BRIOCHE_OUTPUT"
        `,
      ],
      env: {
        source: sourceArchive,
        PATH: std.tpl`${stage2()}/bin:${pkgconf()}/bin`,
        MAGIC: std.tpl`${stage2()}/usr/share/misc/magic`,
        CFLAGS: std.tpl`-I${ncurses()}/include`,
        LDFLAGS: std.tpl`-L${ncurses()}/lib`,
        NCURSES_CFLAGS: std.tpl`-I${ncurses()}/include`,
        NCURSES_LIBS: std.tpl`-L${ncurses()}/lib -lncursesw`,
        PKG_CONFIG_PATH: std.tpl`${ncurses()}/lib/pkgconfig`,
      },
    })
    .toDirectory();
});
