import * as std from "/core";
import stage2 from "/toolchain/stage2";

export default std.memo((): std.Recipe<std.Directory> => {
  let source = Brioche.download(
    "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/bzip2-1.0.8.tar.gz",
  )
    .unarchive("tar", "gzip")
    .peel();
  const sourcePatch = Brioche.download(
    "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/patches/bzip2-1.0.8-install_docs-1.patch",
  );

  source = std
    .process({
      command: std.tpl`${stage2}/bin/bash`,
      args: [
        "-euo",
        "pipefail",
        "-c",
        std.indoc`
          cd "$BRIOCHE_OUTPUT"
          patch -Np1 -i "$sourcePatch"
          sed -i 's@\\(ln -s -f \\)$(PREFIX)/bin/@\\1@' Makefile
          sed -i "s@(PREFIX)/man@(PREFIX)/share/man@g" Makefile
        `,
      ],
      env: {
        sourcePatch,
        PATH: std.tpl`${stage2}/bin`,
      },
      outputScaffold: source,
    })
    .toDirectory();

  return std
    .process({
      command: std.tpl`${stage2}/bin/bash`,
      args: [
        "-euo",
        "pipefail",
        "-c",
        std.indoc`
          make -f Makefile-libbz2_so
          make clean

          make
          make PREFIX="$BRIOCHE_OUTPUT" install

          mkdir -p "$BRIOCHE_OUTPUT/lib"
          cp -a libbz2.so.* "$BRIOCHE_OUTPUT/lib"
          ln -s libbz2.so.1.0.8 "$BRIOCHE_OUTPUT/lib/libbz2.so"
        `,
      ],
      env: {
        sourcePatch,
        PATH: std.tpl`${stage2}/bin`,
      },
      workDir: source,
    })
    .toDirectory();
});
