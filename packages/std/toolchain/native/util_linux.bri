import * as std from "/core";
import stage2 from "/toolchain/stage2";

export default std.memo((): std.Recipe<std.Directory> => {
  const source = Brioche.download(
    "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/util-linux-2.39.1.tar.xz",
  )
    .unarchive("tar", "xz")
    .peel();

  return std
    .process({
      command: std.tpl`${stage2()}/bin/bash`,
      args: [
        "-euo",
        "pipefail",
        "-c",
        std.indoc`
          ./configure \
            --prefix= \
            --bindir=/bin \
            --libdir=/lib \
            --runstatedir=/run \
            --sbindir=/bin \
            --disable-chfn-chsh \
            --disable-login \
            --disable-nologin \
            --disable-su \
            --disable-setpriv \
            --disable-runuser \
            --disable-pylibmount \
            --disable-static \
            --without-python \
            --without-systemd \
            --without-systemdsystemunitdir \
            --disable-makeinstall-chown \
            --disable-makeinstall-setuid \
            ADJTIME_PATH=/var/lib/hwclock/adjtime
          make
          make install DESTDIR="$BRIOCHE_OUTPUT"
        `,
      ],
      env: {
        PATH: std.tpl`${stage2()}/bin`,
      },
      workDir: source,
    })
    .toDirectory();
});
