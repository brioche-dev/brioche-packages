import * as std from "/core";
import stage2 from "/toolchain/stage2";

export default std.memo((): std.Recipe<std.Directory> => {
  const sourceArchive = Brioche.download(
    "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/readline-8.2.tar.gz",
  );
  const sourcePatch = Brioche.download(
    "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/patches/readline-8.2-upstream_fix-1.patch",
  );

  return std
    .process({
      command: std.tpl`${stage2()}/bin/bash`,
      args: [
        "-c",
        std.indoc`
          set -euo pipefail

          tar -xf "$source" --strip-components=1 --no-same-owner --no-same-permissions

          sed -i '/MV.*old/d' Makefile.in
          sed -i '/{OLDSUFF}/c:' support/shlib-install

          patch -Np1 -i "$sourcePatch"

          ./configure \
            --prefix=/ \
            --with-curses
          make SHLIB_LIBS="-lncursesw"
          make install SHLIB_LIBS="-lncursesw" DESTDIR="$BRIOCHE_OUTPUT"
        `,
      ],
      env: {
        source: sourceArchive,
        PATH: std.tpl`${stage2()}/bin`,
        sourcePatch,
      },
    })
    .toDirectory();
});
