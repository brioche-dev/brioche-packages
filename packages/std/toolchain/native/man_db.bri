import * as std from "/core";
import stage2 from "/toolchain/stage2";
import gdbm from "./gdbm.bri";
import libpipeline from "./libpipeline.bri";
import groff from "./groff.bri";

export default std.memo((): std.Recipe<std.Directory> => {
  const sourceArchive = Brioche.download(
    "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/man-db-2.11.2.tar.xz",
  );

  return std
    .process({
      command: std.tpl`${stage2()}/bin/bash`,
      args: [
        "-c",
        std.indoc`
          set -euo pipefail

          tar -xf "$source" --strip-components=1 --no-same-owner --no-same-permissions

          ./configure \
            --prefix=/ \
            --sysconfdir=/etc \
            --disable-setuid \
            --with-systemdtmpfilesdir= \
            --with-systemdsystemunitdir=
          make
          make install DESTDIR="$BRIOCHE_OUTPUT"
        `,
      ],
      env: {
        source: sourceArchive,
        PATH: std.tpl`${stage2()}/bin:${groff()}/bin`,
        MAGIC: std.tpl`${stage2()}/usr/share/misc/magic`,
        libpipeline_CFLAGS: std.tpl`-I${libpipeline()}/include`,
        libpipeline_LIBS: std.tpl`-L${libpipeline()}/lib -lpipeline`,
        CFLAGS: std.tpl`-I${gdbm()}/include`,
        LDFLAGS: std.tpl`-L${gdbm()}/lib -lgdbm`,
        GROFF_FONT_PATH: std.tpl`${groff()}/share/groff/current/font`,
        GROFF_TMAC_PATH: std.tpl`${groff()}/share/groff/current/tmac`,
      },
    })
    .toDirectory();
});
