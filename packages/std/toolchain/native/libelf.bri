import * as std from "/core";
import stage2 from "/toolchain/stage2";
import glibc from "./glibc.bri";
import binutils from "./binutils.bri";
import linuxHeaders from "./linux_headers.bri";
import gcc from "./gcc.bri";
import bzip2 from "./bzip2.bri";
import zlib from "./zlib.bri";

export default std.memo((): std.Recipe<std.Directory> => {
  const toolchain = std.merge(glibc(), binutils(), gcc(), linuxHeaders());

  const sourceArchive = Brioche.download(
    "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/elfutils-0.189.tar.bz2",
  );

  return std
    .process({
      command: std.tpl`${stage2()}/bin/bash`,
      args: [
        "-c",
        std.indoc`
          set -euo pipefail

          tar -xf "$source" --strip-components=1 --no-same-owner --no-same-permissions

          ./configure \
            --prefix=/ \
            --disable-debuginfod \
            --enable-libdebuginfod=dummy
          make
          make -C libelf install DESTDIR="$BRIOCHE_OUTPUT"

          mkdir -p "$BRIOCHE_OUTPUT"/lib/pkgconfig
          install -vm644 config/libelf.pc "$BRIOCHE_OUTPUT"/lib/pkgconfig/
          rm "$BRIOCHE_OUTPUT"/lib/libelf.a
        `,
      ],
      env: {
        source: sourceArchive,
        PATH: std.tpl`${toolchain}/bin:${bzip2()}/bin:${stage2()}/bin`,
        LDFLAGS: std.tpl`-L${zlib()}/lib -Wl,--push-state,--as-needed -lz -Wl,--pop-state`,
        CPPFLAGS: std.tpl`-I${zlib()}/include`,
      },
    })
    .toDirectory();
});
