import * as std from "/core";
import stage2 from "/toolchain/stage2";

export default std.memo(async (): Promise<std.Recipe<std.Directory>> => {
  const source = Brioche.download(
    "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/linux-6.4.12.tar.xz",
  )
    .unarchive("tar", "xz")
    .peel();

  return std
    .process({
      command: std.tpl`${stage2}/bin/bash`,
      args: [
        "-euo",
        "pipefail",
        "-c",
        std.indoc`
          make mrproper

          mkdir -p "$BRIOCHE_OUTPUT"

          make headers
          find usr/include -type f ! -name '*.h' -delete
          cp -r usr/include "$BRIOCHE_OUTPUT/include"
        `,
      ],
      env: {
        PATH: std.tpl`${stage2}/bin`,
      },
      workDir: source,
    })
    .toDirectory();
});
