import * as std from "/core";
import toolchain from "./2_18_toolchain.bri";

export default std.memo(async (): Promise<std.Recipe<std.Directory>> => {
  const sourceArchive = Brioche.download(
    "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/util-linux-2.39.1.tar.xz",
  );

  return std
    .process({
      command: "/usr/bin/env",
      args: [
        "sh",
        "-c",
        std.indoc`
          tar xf "$source" --strip-components=1
          ./configure \
              --libdir=/usr/lib \
              --runstatedir=/run \
              --bindir=/usr/bin \
              --sbindir=/usr/sbin \
              --docdir=/usr/share/doc/util-linux-2.39.1 \
              --disable-chfn-chsh \
              --disable-login \
              --disable-nologin \
              --disable-su \
              --disable-setpriv \
              --disable-runuser \
              --disable-pylibmount \
              --disable-wall \
              --disable-mount \
              --disable-static \
              --without-python
          make
          make install DESTDIR="$BRIOCHE_OUTPUT"
        `,
      ],
      env: {
        PATH: std.tpl`${toolchain()}/bin`,
        source: sourceArchive,
      },
    })
    .toDirectory();
});
