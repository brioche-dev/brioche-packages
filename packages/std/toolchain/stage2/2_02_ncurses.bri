import * as std from "/core";
import { bootstrapRun, currentPlatformInfo } from "../stage0";
import stage1 from "../stage1";

export default std.memo(async (): Promise<std.Recipe<std.Directory>> => {
  let source = Brioche.download(
    "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/ncurses-6.4.tar.gz",
  )
    .unarchive("tar", "gzip")
    .peel();

  source = bootstrapRun({
    script: std.indoc`
      cd "$BRIOCHE_OUTPUT"
      sed -i 's/mawk//' configure
    `,
    outputScaffold: source,
  });

  return bootstrapRun({
    script: std.indoc`
      export PATH="$stage1/usr/bin:$SYSTEM_TOOLCHAIN_PATH\${PATH:+:$PATH}"

      mkdir build
      pushd build
        ../configure
        make -C include
        make -C progs tic
      popd

      ./configure \
        --prefix=/usr \
        --host="$TARGET" \
        --build="$(./config.guess)" \
        --mandir=/usr/share/man \
        --with-manpage-format=normal \
        --with-shared \
        --without-normal \
        --with-cxx-shared \
        --without-debug \
        --without-ada \
        --disable-stripping \
        --enable-widec

      make
      make install DESTDIR="$BRIOCHE_OUTPUT" TIC_PATH="$(pwd)/build/progs/tic"
      echo "INPUT(-lncursesw)" > "$BRIOCHE_OUTPUT/usr/lib/libncurses.so"
    `,
    env: {
      BRIOCHE_OUTPUT: std.outputPath,
      TARGET: `${currentPlatformInfo().arch}-lfs-linux-gnu`,
      stage1,
    },
    workDir: source,
  });
});
