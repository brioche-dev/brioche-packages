import * as std from "/core";
import { bootstrapRun } from "../stage0";
import stage1 from "../stage1";

export default std.memo(async (): Promise<std.Recipe<std.Directory>> => {
  const sourceArchive = Brioche.download(
    "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/binutils-2.41.tar.xz",
  );

  return bootstrapRun({
    script: std.indoc`
      set -euo pipefail

      export PATH="$stage1/usr/bin:/usr/lib/gcc/aarch64-linux-gnu/12\${PATH:+:$PATH}"

      mkdir -p source
      tar xf "$source" -C source --strip-components=1 --no-same-owner --no-same-permissions
      cd source

      sed '6009s/$add_dir//' -i ltmain.sh

      mkdir build
      cd build

      ../configure \
        --prefix=/usr \
        --build="$(../config.guess)" \
        --host="$TARGET" \
        --disable-nls \
        --enable-shared \
        --enable-gprofng=no \
        --disable-werror \
        --enable-64-bit-bfd

      make
      make install DESTDIR="$BRIOCHE_OUTPUT"

      rm "$BRIOCHE_OUTPUT"/usr/lib/lib{bfd,ctf,ctf-nobfd,opcodes,sframe}.{a,la}
    `,
    env: {
      source: sourceArchive,
      BRIOCHE_OUTPUT: std.outputPath,
      TARGET: "aarch64-lfs-linux-gnu",
      stage1: stage1(),
    },
  });
});
