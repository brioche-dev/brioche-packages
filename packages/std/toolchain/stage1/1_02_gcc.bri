import * as std from "/core";
import { bootstrapRun } from "/toolchain/stage0";
import binutils from "./1_01_binutils.bri";

export default std.memo(async (): Promise<std.Recipe<std.Directory>> => {
  const sourceArchive = Brioche.download(
    "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/gcc-13.2.0.tar.xz",
  );
  const mpfrArchive = Brioche.download(
    "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/mpfr-4.2.0.tar.xz",
  );
  const gmpArchive = Brioche.download(
    "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/gmp-6.3.0.tar.xz",
  );
  const mpcArchive = Brioche.download(
    "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/mpc-1.3.1.tar.gz",
  );

  const stage1 = binutils();

  return bootstrapRun({
    script: std.indoc`
      set -euo pipefail

      export PATH="$stage1/usr/bin:/usr/lib/gcc/x86_64-linux-gnu/12\${PATH:+:$PATH}"

      mkdir -p source/build
      tar -xf "$source" -C source --strip-components=1 --no-same-owner --no-same-permissions
      cd source

      tar -xf "$mpfrArchive" --no-same-owner --no-same-permissions
      mv mpfr-4.2.0 mpfr
      tar -xf "$gmpArchive" --no-same-owner --no-same-permissions
      mv gmp-6.3.0 gmp
      tar -xf "$mpcArchive" --no-same-owner --no-same-permissions
      mv mpc-1.3.1 mpc

      case "$(uname -m)" in
        x86_64 )
          sed \\
            -e '/m64=/s/lib64/lib/' \\
            -i.orig \\
            gcc/config/i386/t-linux64
        ;;
      esac

      cd build
      ../configure \
        --prefix=/usr \
        --target="$TARGET" \
        --with-build-sysroot="$stage1" \
        --with-glibc-version=2.38 \
        --with-newlib \
        --without-headers \
        --enable-default-pie \
        --enable-default-ssp \
        --disable-nls \
        --disable-shared \
        --disable-multilib \
        --disable-threads \
        --disable-libatomic \
        --disable-libgomp \
        --disable-libquadmath \
        --disable-libssp \
        --disable-libvtv \
        --disable-libstdcxx \
        --enable-languages=c,c++
      make
      make install DESTDIR="$BRIOCHE_OUTPUT"

      cd ..
      cat gcc/limitx.h gcc/glimits.h gcc/limity.h > \
        "$(dirname "$("$TARGET-gcc" -print-libgcc-file-name)")"/include/limits.h
    `,
    env: {
      source: sourceArchive,
      mpfrArchive,
      gmpArchive,
      mpcArchive,
      BRIOCHE_OUTPUT: std.outputPath,
      TARGET: "x86_64-lfs-linux-gnu",
      stage1,
    },
  });
});
