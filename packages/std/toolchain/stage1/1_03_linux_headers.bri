import * as std from "/core";
import { bootstrapRun, currentPlatformInfo } from "/toolchain/stage0";

export default std.memo(async (): Promise<std.Recipe<std.Directory>> => {
  const source = Brioche.download(
    "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/linux-6.4.12.tar.xz",
  )
    .unarchive("tar", "xz")
    .peel();

  return bootstrapRun({
    script: std.indoc`
      export PATH="$SYSTEM_TOOLCHAIN_PATH\${PATH:+:$PATH}"

      make mrproper

      mkdir -p "$BRIOCHE_OUTPUT/usr"

      make headers
      find usr/include -type f ! -name '*.h' -delete
      cp -r usr/include "$BRIOCHE_OUTPUT/usr"
    `,
    env: {
      BRIOCHE_OUTPUT: std.outputPath,
      TARGET: `${currentPlatformInfo().arch}-lfs-linux-gnu`,
    },
    workDir: source,
  });
});
