import * as std from "/core";
import { bootstrapRun } from "/toolchain/stage0";

export default std.memo(async (): Promise<std.Recipe<std.Directory>> => {
  const sourceArchive = Brioche.download(
    "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/linux-6.4.12.tar.xz",
  );

  return bootstrapRun({
    script: std.indoc`
      set -euo pipefail

      export PATH="/usr/lib/gcc/aarch64-linux-gnu/12\${PATH:+:$PATH}"

      mkdir -p source
      tar -xf "$source" -C source --strip-components=1 --no-same-owner --no-same-permissions
      cd source

      make mrproper

      mkdir -p "$BRIOCHE_OUTPUT/usr"

      make headers
      find usr/include -type f ! -name '*.h' -delete
      cp -r usr/include "$BRIOCHE_OUTPUT/usr"
    `,
    env: {
      source: sourceArchive,
      BRIOCHE_OUTPUT: std.outputPath,
      TARGET: "aarch64-lfs-linux-gnu",
    },
  });
});
