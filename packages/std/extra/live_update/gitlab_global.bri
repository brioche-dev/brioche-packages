/**
 * Interface representing the parsed GitLab repository information.
 */
interface GitlabRepoInfo {
  readonly repoOwner: string;
  readonly repoName: string;
}

function tryParseGitlabRepo(repo: string): GitlabRepoInfo | null {
  const match = repo.match(
    /^(?:https?:\/\/)?(www\.)?(?:gitlab\.com\/)?(?<repoOwner>[\w\.-]+)\/(?<repoName>[\w\.-]+)\/?$/,
  );

  const { repoOwner, repoName: matchedRepoName } = match?.groups ?? {};
  if (repoOwner == null || matchedRepoName == null) {
    return null;
  }

  let repoName = matchedRepoName;
  if (repoName.endsWith(".git")) {
    repoName = repoName.slice(0, -4);
  }

  return { repoOwner, repoName };
}

/**
 * Parse a GitLab repository URL to extract the repository owner and name.
 *
 * @param repo - The GitLab repository URL to parse.
 *
 * @returns An object containing the repository owner and name.
 *
 * @throws If the repository URL cannot be parsed.
 */
export function parseGitlabRepo(repo: string): GitlabRepoInfo {
  const info = tryParseGitlabRepo(repo);
  if (info == null) {
    throw new Error(
      `Could not parse repo name and owner from ${JSON.stringify(repo)}`,
    );
  }

  return info;
}
