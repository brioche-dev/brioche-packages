import * as std from "/core";
import { runBash } from "./run_bash.bri";

/**
 * Create a recipe that replaces absolute paths in pkg-config files with
 * relative paths using the `${pcfiledir}` variable.
 *
 * This is useful for ensuring that pkg-config files can be used in different
 * environments without needing to modify them manually.
 *
 * @param recipe - The recipe to apply the transformation to.
 * @returns A new recipe with the transformed pkg-config files.
 */
export function pkgConfigMakePathsRelative(
  recipe: std.RecipeLike<std.Directory>,
): std.Recipe<std.Directory> {
  return runBash`
    find "$BRIOCHE_OUTPUT"/lib/pkgconfig -name '*.pc' -type f -print0 \
      | while IFS= read -r -d $'\\0' file; do
        sed -i 's|=/|=\${pcfiledir}/../../|' "$file"
      done
  `
    .outputScaffold(recipe)
    .toDirectory();
}
