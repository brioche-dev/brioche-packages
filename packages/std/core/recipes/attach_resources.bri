import { BRIOCHE_VERSION } from "../runtime.bri";
import { semverMatches } from "../semver.bri";
import { assert } from "../utils.bri";
import { type Recipe, type RecipeLike, createRecipe } from "./recipe.bri";
import type { Directory } from "./directory.bri";

/**
 * Attach resources to the files within a recipe by searching within
 * directories named `brioche-resources.d`. This is useful when unarchiving
 * a recipe that was archived using `collectReferences`.
 */
export function attachResources(
  recipe: RecipeLike<Directory>,
): Recipe<Directory> {
  return createRecipe(["directory"], {
    sourceDepth: 1,
    briocheSerialize: async (meta) => {
      assert(semverMatches(BRIOCHE_VERSION, ">=0.1.4"));

      const recipeValue =
        typeof recipe === "function" ? await recipe() : await recipe;
      const serializedRecipe = await recipeValue.briocheSerialize();
      return {
        meta,
        type: "attach_resources",
        recipe: serializedRecipe,
      };
    },
  });
}
