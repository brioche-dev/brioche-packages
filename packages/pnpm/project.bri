import * as std from "std";
import { npmInstallGlobal } from "nodejs";

export const project = {
  name: "pnpm",
  version: "10.10.0",
  repository: "https://github.com/pnpm/pnpm",
};

export default function pnpm(): std.Recipe<std.Directory> {
  const recipe = npmInstallGlobal({
    packageName: project.name,
    version: project.version,
  });

  return std.withRunnableLink(recipe, "bin/pnpm");
}

export async function test() {
  const script = std.runBash`
    pnpm --version | tee "$BRIOCHE_OUTPUT"
  `
    .dependencies(pnpm)
    .toFile();

  const result = (await script.read()).trim();

  // Check that the result contains the expected version
  const expected = project.version;
  std.assert(result === expected, `expected '${expected}', got '${result}'`);

  return script;
}

export function liveUpdate() {
  return std.liveUpdateFromGithubReleases({ project });
}
