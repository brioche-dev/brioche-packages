import * as std from "std";
import libpcap from "libpcap";

export const project = {
  name: "tcpdump",
  version: "4.99.5",
};

const source = Brioche.download(
  `https://www.tcpdump.org/release/tcpdump-${project.version}.tar.xz`,
)
  .unarchive("tar", "xz")
  .peel();

export default function tcpdump(): std.Recipe<std.Directory> {
  const tcpdump = std.runBash`
    ./configure --prefix=/
    make install DESTDIR="$BRIOCHE_OUTPUT"
  `
    .workDir(source)
    .dependencies(std.toolchain(), libpcap())
    .toDirectory();

  return std.withRunnableLink(tcpdump, "bin/tcpdump");
}

export async function test() {
  const script = std.runBash`
    tcpdump --version | tee "$BRIOCHE_OUTPUT"
  `
    .dependencies(tcpdump())
    .toFile();

  const result = (await script.read()).trim();

  // Check that the result contains the expected version
  const expected = `tcpdump version ${project.version}`;
  std.assert(
    result.startsWith(expected),
    `expected '${expected}', got '${result}'`,
  );

  return script;
}
