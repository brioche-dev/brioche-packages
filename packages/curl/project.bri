import * as std from "std";
import libpsl from "libpsl";
import openssl from "openssl";

export const project = {
  name: "curl",
  version: "8.13.0",
};

const source = Brioche.download(
  `https://curl.se/download/curl-${project.version}.tar.gz`,
)
  .unarchive("tar", "gzip")
  .peel();

export default function (): std.Recipe<std.Directory> {
  let curl = std.runBash`
    ./configure \\
      --prefix=/ \\
      --with-openssl \\
      --without-ca-bundle \\
      --without-ca-path \\
      --with-ca-fallback
    make
    make install DESTDIR="$BRIOCHE_OUTPUT"
  `
    .workDir(source)
    .dependencies(std.toolchain(), openssl(), libpsl())
    .toDirectory();

  curl = std.setEnv(curl, {
    CPATH: { append: [{ path: "include" }] },
    LIBRARY_PATH: { append: [{ path: "lib" }] },
    PKG_CONFIG_PATH: { append: [{ path: "lib/pkgconfig" }] },
    CMAKE_PREFIX_PATH: { append: [{ path: "." }] },
    CURL_ROOT: { fallback: { path: "." } },
  });

  return std.withRunnableLink(curl, "bin/curl");
}
