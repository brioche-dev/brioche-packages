import nushell from "nushell";
import * as std from "std";
import { goBuild } from "go";
import { gitCheckout } from "git";

export const project = {
  name: "terraform",
  version: "1.11.0",
};

const source = gitCheckout(
  Brioche.gitRef({
    repository: "https://github.com/hashicorp/terraform.git",
    ref: `v${project.version}`,
  }),
);

export default function (): std.Recipe<std.Directory> {
  return goBuild({
    source,
    buildParams: {
      ldflags: ["-w", "-s", `-X github.com/hashicorp/terraform/version.dev=no`],
      mod: "readonly",
    },
    runnable: "bin/terraform",
  });
}

export async function autoUpdate() {
  const src = std.file(std.indoc`
    let version = http get https://api.github.com/repos/hashicorp/terraform/releases/latest
      | get tag_name
      | str replace --regex '^v' ''

    $env.project | from json | update version $version | to json
  `);

  return std.withRunnable(std.directory(), {
    command: "nu",
    args: [src],
    env: { project: JSON.stringify(project) },
    dependencies: [nushell()],
  });
}
