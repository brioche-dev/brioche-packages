import * as std from "std";
import scdoc from "scdoc";
import openssl from "openssl";

export const project = {
  name: "kmod",
  version: "33",
};

const source = Brioche.download(
  `https://www.kernel.org/pub/linux/utils/kernel/kmod/kmod-${project.version}.tar.xz`,
)
  .unarchive("tar", "xz")
  .peel();

export default function kmod(): std.Recipe<std.Directory> {
  return std.runBash`
    ./configure \
      --prefix=/ \
      --sysconfdir=/etc \
      --with-zstd \
      --with-xz \
      --with-zlib \
      --with-openssl \
      CFLAGS="-g -O2"
    make
    make install DESTDIR="$BRIOCHE_OUTPUT"
  `
    .workDir(source)
    .dependencies(std.toolchain(), scdoc(), openssl())
    .toDirectory();
}

export function test() {
  return std.runBash`
    depmod --version | tee -a "$BRIOCHE_OUTPUT"
    insmod --version | tee -a "$BRIOCHE_OUTPUT"
    lsmod | tee -a "$BRIOCHE_OUTPUT"
    modinfo --version | tee -a "$BRIOCHE_OUTPUT"
    modprobe --version | tee -a "$BRIOCHE_OUTPUT"
    rmmod --version | tee -a "$BRIOCHE_OUTPUT"
  `.dependencies(kmod());
}
