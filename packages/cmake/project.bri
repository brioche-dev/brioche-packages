import * as std from "std";
import openssl from "openssl";

export const project = {
  name: "cmake",
  version: "3.30.1",
};

const source = std
  .download({
    url: `https://gitlab.kitware.com/${project.name}/${project.name}/-/archive/v${project.version}/cmake-v${project.version}.tar.gz`,
    hash: std.sha256Hash(
      "0c01e4b11e2c548cbf259dadb0f217194774cff682a65a400012e016e9fa9ef8",
    ),
  })
  .unarchive("tar", "gzip")
  .peel();

export default (): std.Recipe<std.Directory> => {
  const cmake = std.runBash`
    ./bootstrap --prefix=/
    make
    make install DESTDIR="$BRIOCHE_OUTPUT"
  `
    .workDir(source)
    .env({
      OPENSSL_ROOT_DIR: std.tpl`${openssl()}`,
    })
    .dependencies(std.toolchain(), openssl())
    .toDirectory();

  return std.withRunnableLink(cmake, "bin/cmake");
};
