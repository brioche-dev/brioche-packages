import * as std from "std";
import { gitCheckout } from "git";

export const project = {
  name: "oniguruma",
  version: "6.9.10",
};

const source = gitCheckout(
  Brioche.gitRef({
    repository: "https://github.com/kkos/oniguruma.git",
    ref: `v${project.version}`,
  }),
);

export default function (): std.Recipe<std.Directory> {
  let oniguruma = std.runBash`
    autoreconf --install --force --verbose
    ./configure \\
      --prefix=/ \\
      --enable-posix-api=yes
    make
    make install DESTDIR="$BRIOCHE_OUTPUT"
  `
    .dependencies(std.toolchain())
    .workDir(source)
    .toDirectory();

  oniguruma = std.setEnv(oniguruma, {
    CPATH: { append: [{ path: "include" }] },
    LIBRARY_PATH: { append: [{ path: "lib" }] },
    PKG_CONFIG_PATH: { append: [{ path: "lib/pkgconfig" }] },
  });

  return std.withRunnableLink(oniguruma, "bin/onig-config");
}
