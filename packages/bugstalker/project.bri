import * as std from "std";
import libunwind from "libunwind";
import { cargoBuild } from "rust";

// Currently, BugStalker only support x86-64 Linux
// @brioche-packages skip-platform aarch64-linux
export const project = {
  name: "bugstalker",
  version: "0.3.3",
  repository: "https://github.com/godzie44/BugStalker.git",
};

const source = Brioche.gitCheckout({
  repository: project.repository,
  ref: `v${project.version}`,
});

export default function bugstalker(): std.Recipe<std.Directory> {
  std.assert(
    std.CURRENT_PLATFORM === "x86_64-linux",
    `BugStalker does not currently support the platform '${std.CURRENT_PLATFORM}'`,
  );

  return cargoBuild({
    source,
    runnable: "bin/bs",
    dependencies: [libunwind],
  });
}

export async function test(): Promise<std.Recipe<std.File>> {
  const script = std.runBash`
    bs --version | tee "$BRIOCHE_OUTPUT"
  `
    .dependencies(bugstalker)
    .toFile();

  const result = (await script.read()).trim();

  // Check that the result contains the expected version
  const expected = `bugstalker ${project.version}`;
  std.assert(result === expected, `expected '${expected}', got '${result}'`);

  return script;
}

export function liveUpdate(): std.Recipe<std.Directory> {
  return std.liveUpdateFromGithubReleases({ project });
}
