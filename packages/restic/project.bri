import * as std from "std";
import { goBuild } from "go";

export const project = {
  name: "restic",
  version: "0.18.0",
  repository: "https://github.com/restic/restic.git",
};

const source = Brioche.gitCheckout({
  repository: project.repository,
  ref: `v${project.version}`,
});

export default function restic(): std.Recipe<std.Directory> {
  return goBuild({
    source,
    path: "./cmd/restic",
    runnable: "bin/restic",
  });
}

export async function test() {
  const script = std.runBash`
    restic version | tee "$BRIOCHE_OUTPUT"
  `
    .dependencies(restic())
    .toFile();

  const result = (await script.read()).trim();

  // Check that the result contains the expected version
  const expected = `restic ${project.version}`;
  std.assert(
    result.startsWith(expected),
    `expected '${expected}', got '${result}'`,
  );

  return script;
}

export function liveUpdate() {
  return std.liveUpdateFromGithubReleases({ project });
}
