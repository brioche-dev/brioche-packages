import * as std from "std";
import { cargoBuild } from "rust";

export const project = {
  name: "bat",
  version: "0.24.0",
};

const source = std
  .download({
    url: `https://github.com/sharkdp/bat/archive/refs/tags/v${project.version}.tar.gz`,
    hash: std.sha256Hash(
      "907554a9eff239f256ee8fe05a922aad84febe4fe10a499def72a4557e9eedfb",
    ),
  })
  .unarchive("tar", "gzip")
  .peel();

export default function bat(): std.Recipe<std.Directory> {
  return cargoBuild({
    source,
    runnable: "bin/bat",
  });
}

export async function test() {
  const script = std.runBash`
    echo -n $(bat --version) | tee "$BRIOCHE_OUTPUT"
  `.dependencies(bat());

  const result = await script.toFile().read();

  // Check that the result contains the expected version
  const expected = `bat ${project.version}`;
  std.assert(result === expected, `expected '${expected}', got '${result}'`);

  return script;
}
