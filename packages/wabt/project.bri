import * as std from "std";
import { cmakeBuild } from "cmake";
import python from "python";

export const project = {
  name: "wabt",
  version: "1.0.37",
  repository: "https://github.com/webassembly/wabt.git",
};

const source = Brioche.gitCheckout({
  repository: project.repository,
  ref: project.version,
  options: {
    submodules: true,
  },
});

export default function wabt(): std.Recipe<std.Directory> {
  return cmakeBuild({
    source,
    dependencies: [std.toolchain, python],
  }).pipe((recipe) =>
    std.setEnv(recipe, {
      CPATH: { append: [{ path: "include" }] },
      LIBRARY_PATH: { append: [{ path: "lib" }] },
      CMAKE_PREFIX_PATH: { append: [{ path: "." }] },
    }),
  );
}

export async function test(): Promise<std.Recipe<std.File>> {
  const script = std.runBash`
    wat2wasm --version | tee "$BRIOCHE_OUTPUT"
  `
    .dependencies(std.toolchain, wabt)
    .toFile();

  const result = (await script.read()).trim();

  // Check that the result contains the expected version
  // HACK: Workaround for apparent issue with incorrect version number in
  // upstream release: https://github.com/WebAssembly/wabt/issues/2550#issuecomment-2697494141
  const expected = project.version === "1.0.37" ? "1.0.36" : project.version;
  std.assert(result === expected, `expected '${expected}', got '${result}'`);

  return script;
}

export function liveUpdate(): std.Recipe<std.Directory> {
  return std.liveUpdateFromGithubReleases({ project });
}
