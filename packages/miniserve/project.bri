import * as std from "std";
import { cargoBuild } from "rust";

export const project = {
  name: "miniserve",
  version: "0.27.1",
};

const source = std
  .download({
    url: `https://github.com/svenstaro/miniserve/archive/refs/tags/v${project.version}.tar.gz`,
    hash: std.sha256Hash(
      "b65580574ca624072b1a94d59ebf201ab664eacacb46a5043ef7b81ebb538f80",
    ),
  })
  .unarchive("tar", "gzip")
  .peel();

// Patch `Cargo.lock` to fix builds with Rust >= 1.80. This patch is derived
// from the `Cargo.lock` from this commit in miniserve:
// https://github.com/svenstaro/miniserve/commit/2fbfcbfe17b5c12630ccb03b6ccd31cb4b8316cc
const patch = Brioche.includeFile("miniserve-v0.27.1.patch");

export default () => {
  const patchedSource = std.runBash`
    cd "$BRIOCHE_OUTPUT"
    patch -p1 < $patch
  `
    .outputScaffold(source)
    .env({ patch })
    .toDirectory();

  return cargoBuild({
    source: patchedSource,
    runnable: "bin/miniserve",
  });
};
