name: "[Build]"

on:
  workflow_call:
    inputs:
      enabled:
        type: boolean
        default: true

jobs:
  build:
    name: Build packages [${{ matrix.platform }}]
    if: inputs.enabled
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: x86_64-linux
            runs-on: brioche-dev-builder-runner
          - platform: aarch64-linux
            runs-on: brioche-dev-builder-runner-aarch64

    runs-on: ${{ matrix.runs-on }}
    timeout-minutes: 1440
    steps:
      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y curl gettext xz-utils

      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Brioche
        uses: brioche-dev/setup-brioche@v1
        with:
          version: "nightly"

      - name: Build packages
        run: |
          packages=(packages/*)

          n=1
          for package in "${packages[@]}"; do
            label="$package ($n / ${#packages[@]})"
            ((n++))
            if grep -q "@brioche-packages skip-platform $PLATFORM" "$package/project.bri"; then
              echo "$label: skipping (does not support $PLATFORM)"
            else
              echo "::group::$label"
              brioche build -p "$package" --sync --locked --display plain-reduced --experimental-lazy
              echo "::endgroup::"
            fi
          done
        env:
          PLATFORM: ${{ matrix.platform }}
          BRIOCHE_REGISTRY_PASSWORD: ${{ secrets.BRIOCHE_REGISTRY_PASSWORD }}
          BRIOCHE_CACHE_URL: ${{ vars.BRIOCHE_CACHE_URL }}
          AWS_ACCESS_KEY_ID: ${{ secrets.CACHE_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CACHE_AWS_SECRET_ACCESS_KEY }}
          AWS_ENDPOINT_URL_S3: ${{ secrets.CACHE_AWS_ENDPOINT_URL_S3 }}
          AWS_REGION: ${{ vars.CACHE_AWS_REGION }}
          AWS_REQUEST_CHECKSUM_CALCULATION: WHEN_REQUIRED
          AWS_RESPONSE_CHECKSUM_CALCULATION: WHEN_REQUIRED

      - name: Run package tests
        run: |
          packages=(packages/*)

          n=1
          for package in "${packages[@]}"; do
            label="$package ($n / ${#packages[@]})"
            ((n++))

            if grep -q 'export.*test' "$package/project.bri"; then
              if grep -q "@brioche-packages skip-platform $PLATFORM" "$package/project.bri"; then
                echo "$label: skipping (does not support $PLATFORM)"
              else
                echo "::group::$label"
                brioche build -p "$package" -e test --sync --locked --display plain-reduced --experimental-lazy
                echo "::endgroup::"
              fi
            else
              echo "$label: no tests found"
            fi
          done
        env:
          BRIOCHE_REGISTRY_PASSWORD: ${{ secrets.BRIOCHE_REGISTRY_PASSWORD }}
          BRIOCHE_CACHE_URL: ${{ vars.BRIOCHE_CACHE_URL }}
          AWS_ACCESS_KEY_ID: ${{ secrets.CACHE_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CACHE_AWS_SECRET_ACCESS_KEY }}
          AWS_ENDPOINT_URL_S3: ${{ secrets.CACHE_AWS_ENDPOINT_URL_S3 }}
          AWS_REGION: ${{ vars.CACHE_AWS_REGION }}
          AWS_REQUEST_CHECKSUM_CALCULATION: WHEN_REQUIRED
          AWS_RESPONSE_CHECKSUM_CALCULATION: WHEN_REQUIRED

      - name: Save failed processes
        if: failure()
        uses: actions/upload-artifact@v5
        with:
          name: process-events-${{ github.run_id }}-${{ matrix.platform }}
          path: ~/.local/share/brioche/process-temp/*/events.bin.zst
          compression-level: 0

      - name: Show failed processes
        if: failure()
        run: |
          process_events=(~/.local/share/brioche/process-temp/*/events.bin.zst)

          for process_event in "${process_events[@]}"; do
            echo "::group::$process_event"

            truncated_line_count="$(brioche jobs logs "$process_event" --limit 200 | wc -l)"
            if [ "$truncated_line_count" -gt 1200 ]; then
              # Looks like the output might be long, so show the first 500
              # lines and the last 500 lines

              brioche jobs logs "$process_event" --limit 500 | head -n500
              echo "..."
              brioche jobs logs "$process_event" | tail -n500
            else
              # Looks like the output might be short, so show the whole file
              brioche jobs logs "$process_event"
            fi

            echo "::endgroup::"
          done

  # Extra job that succeeds when all build jobs succeed (useful for PR requirements)
  all-builds-passed:
    name: All builds passed
    if: always() && inputs.enabled && (needs.build.result == 'success' || needs.build.result != 'failed')
    needs: [build]
    runs-on: ubuntu-24.04
    steps:
      - run: test "$BUILD_RESULT" = "success"
        env:
          BUILD_RESULT: ${{ needs.build.result }}
