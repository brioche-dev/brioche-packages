import * as runtime from "../runtime.bri";
import { cast } from "./cast.bri";
import { Directory } from "./directory.bri";
import { type File } from "./file.bri";
import { type AsyncLazy, type Lazy, type Value, createLazy } from "./value.bri";

export function unpack(file: AsyncLazy<File>, archiveFormat: runtime.ArchiveFormat, compressionFormat: runtime.CompressionFormat = "none"): Lazy<Directory> {
  return createLazy(["directory"], {
    sourceDepth: 1,
    briocheSerialize: async (meta) => ({
      type: "unpack",
      file: await (await file).briocheSerialize(),
      archive: archiveFormat,
      compression: compressionFormat,
      meta,
    }),
  });
}
