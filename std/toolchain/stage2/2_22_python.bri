import * as std from "/core";
import toolchain from "./2_18_toolchain.bri";

export default std.memo(async (): Promise<std.Lazy<std.Directory>> => {
  const source = std
    .download({
      url: "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/Python-3.11.4.tar.xz",
      hash: std.sha256Hash(
        "2f0e409df2ab57aa9fc4cbddfb976af44e4e55bf6f619eee6bc5c2297264a7f6",
      ),
    })
    .unpack("tar", "xz")
    .peel()
    .cast("directory");

  return std
    .process({
      command: "/usr/bin/env",
      args: [
        "sh",
        "-c",
        std.indoc`
          ./configure \
            --prefix=/usr \
            --enable-shared \
            --without-ensurepip
          make
          make install DESTDIR="$BRIOCHE_OUTPUT"
        `,
      ],
      env: {
        PATH: std.tpl`${toolchain()}/bin`,
      },
      workDir: source,
    })
    .cast("directory");
});
