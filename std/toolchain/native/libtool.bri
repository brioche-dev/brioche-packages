import * as std from "/core";
import stage2 from "/toolchain/stage2";

export default std.memo((): std.Lazy<std.Directory> => {
  const source = std
    .download({
      url: "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/libtool-2.4.7.tar.xz",
      hash: std.sha256Hash(
        "4f7f217f057ce655ff22559ad221a0fd8ef84ad1fc5fcb6990cecc333aa1635d",
      ),
    })
    .unpack("tar", "xz")
    .peel()
    .cast("directory");

  let libtool = std
    .process({
      command: std.tpl`${stage2()}/bin/bash`,
      args: [
        "-c",
        std.indoc`
          set -euo pipefail

          ./configure --prefix=/
          make
          make install DESTDIR="$BRIOCHE_OUTPUT"
        `,
      ],
      env: {
        PATH: std.tpl`${stage2()}/bin`,
      },
      workDir: source,
    })
    .cast("directory");

  libtool = libtool.remove("lib/libltdl.a");

  return libtool;
});
