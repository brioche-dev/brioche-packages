import * as std from "/core";
import stage2 from "/toolchain/stage2";

export default std.memo((): std.Lazy<std.Directory> => {
  const source = std
    .download({
      url: "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/bash-5.2.15.tar.gz",
      hash: std.sha256Hash(
        "13720965b5f4fc3a0d4b61dd37e7565c741da9a5be24edc2ae00182fc1b3588c",
      ),
    })
    .unpack("tar", "gzip")
    .peel()
    .cast("directory");

  let bash = std
    .process({
      command: std.tpl`${stage2()}/bin/bash`,
      args: [
        "-c",
        std.indoc`
          set -euo pipefail

          ./configure \
            --prefix=/ \
            --without-bash-malloc \
            --with-installed-readline
          make
          make install DESTDIR="$BRIOCHE_OUTPUT"
        `,
      ],
      env: {
        PATH: std.tpl`${stage2()}/bin`,
      },
      workDir: source,
    })
    .cast("directory");

  bash = bash.insert("bin/sh", std.symlink({ target: "bash" }));

  return bash;
});
