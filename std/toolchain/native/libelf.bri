import * as std from "/core";
import stage2 from "/toolchain/stage2";
import glibc from "./glibc.bri";
import binutils from "./binutils.bri";
import linuxHeaders from "./linux_headers.bri";
import gcc from "./gcc.bri";
import bzip2 from "./bzip2.bri";
import zlib from "./zlib.bri";

export default std.memo((): std.Lazy<std.Directory> => {
  const toolchain = std.merge(glibc(), binutils(), gcc(), linuxHeaders());

  const source = std
    .download({
      url: "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/elfutils-0.189.tar.bz2",
      hash: std.sha256Hash(
        "39bd8f1a338e2b7cd4abc3ff11a0eddc6e690f69578a57478d8179b4148708c8",
      ),
    })
    .unpack("tar", "bzip2")
    .peel()
    .cast("directory");

  let libelf = std
    .process({
      command: std.tpl`${stage2()}/bin/bash`,
      args: [
        "-c",
        std.indoc`
          set -euo pipefail

          ./configure \
            --prefix=/ \
            --disable-debuginfod \
            --enable-libdebuginfod=dummy
          make
          make -C libelf install DESTDIR="$BRIOCHE_OUTPUT"
          install -vm644 config/libelf.pc "$BRIOCHE_OUTPUT"/lib/pkgconfig/
        `,
      ],
      env: {
        PATH: std.tpl`${toolchain}/bin:${bzip2()}/bin:${stage2()}/bin`,
        LDFLAGS: std.tpl`-L${zlib()}/lib`,
        CPPFLAGS: std.tpl`-I${zlib()}/include`,
      },
      workDir: source,
      outputScaffold: std.directory({
        lib: std.directory({
          pkgconfig: std.directory(),
        }),
      }),
    })
    .cast("directory");

  libelf = libelf.remove("lib/libelf.a");

  return libelf;
});
