import * as brioche from "/core";
import stage2 from "/toolchain/stage2";

export default brioche.memo((): brioche.Lazy<brioche.Directory> => {
  const sourceArchive = brioche
    .download({
      url: "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/libxcrypt-4.4.36.tar.xz",
      hash: brioche.sha256Hash("e5e1f4caee0a01de2aee26e3138807d6d3ca2b8e67287966d1fefd65e1fd8943"),
    });

  return brioche.process({
    command: brioche.tpl`${stage2()}/bin/bash`,
    args: [
      "-c",
      `
        set -euo pipefail

        tar -xf "$source" --strip-components=1 --no-same-owner --no-same-permissions

        ./configure \
          --prefix=/ \
          --enable-hashes=strong,glibc \
          --enable-obsolete-api=no \
          --disable-static \
          --disable-failure-tokens
        make
        make install DESTDIR="$BRIOCHE_OUTPUT"
      `,
    ],
    env: {
      source: sourceArchive,
      PATH: brioche.tpl`${stage2()}/bin`,
    }
  }).cast("directory");
});
