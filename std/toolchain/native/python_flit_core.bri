import * as std from "/core";
import stage2 from "/toolchain/stage2";
import python from "./python.bri";
import zlib from "./zlib.bri";
import expat from "./expat.bri";
import openssl from "./openssl.bri";
import gdbm from "./gdbm.bri";
import bzip2 from "./bzip2.bri";
import libffi from "./libffi.bri";

export default std.memo((): std.Lazy<std.Directory> => {
  const sourceArchive = std.download({
    url: "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/flit_core-3.9.0.tar.gz",
    hash: std.sha256Hash(
      "72ad266176c4a3fcfab5f2930d76896059851240570ce9a98733b658cb786eba",
    ),
  });

  // TODO: Remove this!
  const dependencies = std.merge(
    zlib(),
    expat(),
    openssl(),
    gdbm(),
    bzip2(),
    libffi(),
  );

  let flitCore = std
    .process({
      command: std.tpl`${stage2()}/bin/bash`,
      args: [
        "-c",
        `
        set -euo pipefail

        tar -xf "$source" --strip-components=1 --no-same-owner --no-same-permissions

        python3 -m venv "$BRIOCHE_OUTPUT"

        "$BRIOCHE_OUTPUT/bin/pip3" wheel \
          -w dist \
          --no-build-isolation \
          --no-deps \
          "$PWD"
        "$BRIOCHE_OUTPUT/bin/pip3" install \
          --no-index \
          --find-links=dist \
          flit_core
      `,
      ],
      env: {
        source: sourceArchive,
        PATH: std.tpl`${python()}/bin:${stage2()}/bin`,
        PYTHONHOME: python(),
        // TODO: Remove this
        LD_LIBRARY_PATH: std.tpl`${dependencies}/lib`,
      },
    })
    .cast("directory");

  // Remove everything but the `lib/` directory. The rest is
  // virtualenv stuff we don't want to keep.
  flitCore = std.directory({
    lib: flitCore.get("lib"),
  });

  return flitCore;
});
