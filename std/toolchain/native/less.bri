import * as std from "/core";
import stage2 from "/toolchain/stage2";

export default std.memo((): std.Lazy<std.Directory> => {
  const sourceArchive = std.download({
    url: "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/less-643.tar.gz",
    hash: std.sha256Hash(
      "c28dea82484a605590aa3dc0a173ab0a218a1293048ca4b42844bf10f1027eb5",
    ),
  });

  // TODO: Figure out why `.unpack()` fails.
  const source = std
    .process({
      command: std.tpl`${stage2()}/bin/tar`,
      args: [
        "-xf",
        sourceArchive,
        "--strip-components=1",
        "-C",
        std.outputPath,
      ],
      outputScaffold: std.directory(),
    })
    .cast("directory");

  return std
    .process({
      command: std.tpl`${stage2()}/bin/bash`,
      args: [
        "-c",
        std.indoc`
          set -euo pipefail

          ./configure \
            --prefix=/ \
            --sysconfdir=/etc
          make
          make install DESTDIR="$BRIOCHE_OUTPUT"
        `,
      ],
      env: {
        PATH: std.tpl`${stage2()}/bin`,
      },
      workDir: source,
    })
    .cast("directory");
});
