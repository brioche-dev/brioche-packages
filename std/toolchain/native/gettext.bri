import * as std from "/core";
import stage2 from "/toolchain/stage2";

export default std.memo((): std.Lazy<std.Directory> => {
  const source = std
    .download({
      url: "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/gettext-0.22.tar.xz",
      hash: std.sha256Hash(
        "0e60393a47061567b46875b249b7d2788b092d6457d656145bb0e7e6a3e26d93",
      ),
    })
    .unpack("tar", "xz")
    .peel()
    .cast("directory");

  let gettext = std
    .process({
      command: std.tpl`${stage2()}/bin/bash`,
      args: [
        "-c",
        std.indoc`
          set -euo pipefail

          ./configure \
            --prefix=/ \
            --disable-static
          make
          make install DESTDIR="$BRIOCHE_OUTPUT"
        `,
      ],
      env: {
        PATH: std.tpl`${stage2()}/bin`,
      },
      workDir: source,
    })
    .cast("directory");

  // Change `lib/preloadable_libintl.so` to be executable
  gettext = gettext.insert(
    "lib/preloadable_libintl.so",
    gettext
      .get("lib/preloadable_libintl.so")
      .cast("file")
      .withPermissions({ executable: true }),
  );

  return gettext;
});
