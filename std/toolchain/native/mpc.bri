import * as std from "/core";
import stage2 from "/toolchain/stage2";
import gmp from "./gmp.bri";
import mpfr from "./mpfr.bri";

export default std.memo((): std.Lazy<std.Directory> => {
  const source = std
    .download({
      url: "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/mpc-1.3.1.tar.gz",
      hash: std.sha256Hash(
        "ab642492f5cf882b74aa0cb730cd410a81edcdbec895183ce930e706c1c759b8",
      ),
    })
    .unpack("tar", "gzip")
    .peel()
    .cast("directory");

  return std
    .process({
      command: std.tpl`${stage2()}/bin/bash`,
      args: [
        "-c",
        std.indoc`
          set -euo pipefail

          ./configure \
            --prefix=/ \
            --disable-static
          make
          make install DESTDIR="$BRIOCHE_OUTPUT"
        `,
      ],
      env: {
        PATH: std.tpl`${stage2()}/bin`,
        CPPFLAGS: std.tpl`-I${gmp()}/include -I${mpfr()}/include`,
        LDFLAGS: std.tpl`-L${gmp()}/lib -L${mpfr()}/lib`,
      },
      workDir: source,
    })
    .cast("directory");
});
