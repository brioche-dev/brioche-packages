import * as std from "/core";
import { bootstrapRun } from "/toolchain/stage0";

export default std.memo(async (): Promise<std.Lazy<std.Directory>> => {
  const sourceArchive = await std
    .download({
      url: "https://development-content.brioche.dev/linuxfromscratch.org/v12.0/packages/binutils-2.41.tar.xz",
      hash: std.sha256Hash("ae9a5789e23459e59606e6714723f2d3ffc31c03174191ef0d015bdf06007450"),
    });

  return bootstrapRun({
    script: `
      set -euo pipefail

      export PATH="/usr/lib/gcc/x86_64-linux-gnu/12\${PATH:+:$PATH}"

      mkdir -p source/build
      tar xf "$source" -C source --strip-components=1
      cd source/build
      ../configure \
        --prefix=/usr \
        --target="$TARGET" \
        --disable-nls \
        --enable-gprofng=no \
        --disable-werror
      make
      make install DESTDIR="$BRIOCHE_OUTPUT"
    `,
    env: {
      source: sourceArchive,
      BRIOCHE_OUTPUT: std.outputPath,
      TARGET: "x86_64-lfs-linux-gnu",
    }
  });
});
